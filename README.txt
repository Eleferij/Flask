09.05.21 Одиннадцатый commit.
Полностью сделал главы 9 и 10.
Теперь у всех пользователей есть роли (Пользователь, Модератор, Администратор).
Пользователи могу редактировать свой профиль: имя, местоположение (на карте Google) и информация о себе.
Администратор может редактировать профиль: в дополнение к трем полям информации профиля эта форма
позволяет администраторам редактировать электронную почту, имя пользователя, статус подтверждения и роль пользователя.
Так же у всех пользователей теперь есть аватарки полученные при помощи сервиса Gravatar.

28.04.21 Десятый commit.
Я доделал 8 главу. Теперь в приложение есть:
- Подтверждение аккаунта;
- Генерирование токенов подтверждения с помощью itsdangerous.
Теперь пользователь может: зарегистрироваться, подтвердить свой аккаунт, залогиниться, увидеть начальную страницу.
ВАЖНО.
Немного переправлял файл email.py.
Добавлял шаблон unconfirmed.html.

27.04.21 Девятый commit (хрен знает сработает или нет - я пробую команду git pull).
Я накосячил. Накосячил с commit - "потерял" восьмой commit. Пытаюсь теперь всё вернуть на место.
Это промежуточный результат по главе 8. У меня полностью получилось всё до 17й страницы:
- добавлена форма входа (Login);
- регистрация (Register);
- после регистрации пользователи добавляются в базу данных.
Дальше по главе идёт подтверждение аккаунта с токенами, но они пока не получилис и в этот commit я их не вносил.
Вожно!
В главе не говорилось, но понадобилось установить email-validator 1.1.2. Без негоне получалось произвести валидацию.
Плсюс в файле views.py нужно добавить from .forms import LoginForm, RegistrationForm
from .forms import LoginForm уже было, а вот про RegistrationForm забыли.

17.04.21 Восьмой commit.
Наконец то!
Этот commit полностью рабочий. У приложения правильная структура и работает отправка почты.
Важно!

MAIL_SERVER = os.environ.get('MAIL_SERVER', 'smtp.yandex.ru')
MAIL_PORT = int(os.environ.get('MAIL_PORT', '587'))
FLASKY_MAIL_SENDER = 'Flasky Admin <k######.##@u####.ru>'

В FLASKY_MAIL_SENDER в скобках <> должна указываться почта того, кто ОТПРАВЛЯЕТ письмо (кто регистрируется на сайте).
set FLASKY_ADMIN=l*******@yandex.ru - задание через консоль того, кто будет ПОЛУЧАТЬ почту.
Плюс я удалил старую базу данных и снова её создал.

Перед запуском приложения в терминале необходимо ввести:
(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set FLASK_APP=flasky.py

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set FLASK_DEBUG=1

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set MAIL_USE_TLS=1

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set MAIL_USERNAME=k######.##@u####.ru

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set MAIL_PASSWORD=...

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>set FLASKY_ADMIN=l*******@yandex.ru

(venv) C:\Users\Эдварт\PycharmProjects\pythonProject>flask run

13.04.21 Седьмой commit.
Приложение запускается (показывает Hello, Stranger!), тестый работают.
Но почта не отправляется (yandex.ru), и при нажатие Submit приложение крашиться.
Я полагаю дело в файле views.py в том самом месте (#...). Я туда вставил код из прошлого урока.
            if app.config['FLASKY_ADMIN']:
                send_email(app.config['FLASKY_ADMIN'], 'New User',
В участке кода выше вообще app.config и send_email пишет Unresolved reference. Я понимаю что нужно сделать import
(и я делал, но безрезультатно), но как сам факт того, что часть кода из учебника отсутствует. Или я что то пропустил.
 
06.04.21 Шестой commit.
Структурировал приложение по схэме из главы 7, но приложение в нерабочем состояние (нехватает некоторых файлов).
Скорее всего они будут описываться в следующих главах.
Для запуска данного приложения необходимо:
- скачать все файлы из шестого commit.
Новых пакетов не устанавливал.

06.04.21 Пятый commit.
Не получилось отправлять собщения на почту.
Для запуска данного приложения необходимо:
- скачать все файлы из пятого commit;
- установить расширение flask-mail
P.s. Вместо googlemail.com пробовал использовать yandex.ru

04.04.21 Четвёртый commit.
Научился работать с базами данных Flask-SQLAlchemy.
Для запуска данного приложения необходимо:
- скачать все файлы из четвёртого commit;
- установить расширение flask-sqlalchemy;
- установить расширение flask-migrate.
P.s. Для запуска flask shell нужно:
(venv) $ set FLASK_APP=main.py
(venv) $ flask shell

22.03.21 Третий commit.
Для запуска данного приложения необходимо:
- скачать все файлы и папки из третьего commit;
- установить расширение flask-wtf.
Шаблоны, с которыми я работал во втором commit, являются одноcторонними в том смысле, 
что они позволяют передавать информацию с сервера пользователю.
В данном commit информация передаётся в другом направлении: пользователь отправляет данные, 
а сервер принимает и обрабатывает.

Это будет второй commit.
Для запуска данного приложения необходимо:
- скачать все файлы и папки из второго commit; 
- установить расширение flask-bootstrap;
- установить расширение flask-moment.
P.s. Можно использовать http://127.0.0.1:5000/user/<name>, например, http://127.0.0.1:5000/user/Eleferij